"use strict";(self.webpackChunkmonaco_lsp_streams=self.webpackChunkmonaco_lsp_streams||[]).push([[4492],{84492:(r,e,o)=>{o.d(e,{AQ:()=>p,aZ:()=>b,l5:()=>F,lQ:()=>B,s7:()=>L,sH:()=>w,sN:()=>m,ss:()=>v,yI:()=>f,zp:()=>D});var t=o(96005),i=o(96084),n=o(37550),d=o(34710);const a=(0,n.x1A)("editor.lineHighlightBackground",null,t.kg("lineHighlight","Background color for the highlight of line at the cursor position.")),c=((0,n.x1A)("editor.lineHighlightBorder",{dark:"#282828",light:"#eeeeee",hcDark:"#f38518",hcLight:n.b1q},t.kg("lineHighlightBorderBox","Background color for the border around the line at the cursor position.")),(0,n.x1A)("editor.rangeHighlightBackground",{dark:"#ffffff0b",light:"#fdff0033",hcDark:null,hcLight:null},t.kg("rangeHighlight","Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations."),!0),(0,n.x1A)("editor.rangeHighlightBorder",{dark:null,light:null,hcDark:n.buw,hcLight:n.buw},t.kg("rangeHighlightBorder","Background color of the border around highlighted ranges.")),(0,n.x1A)("editor.symbolHighlightBackground",{dark:n.Ubg,light:n.Ubg,hcDark:null,hcLight:null},t.kg("symbolHighlight","Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations."),!0),(0,n.x1A)("editor.symbolHighlightBorder",{dark:null,light:null,hcDark:n.buw,hcLight:n.buw},t.kg("symbolHighlightBorder","Background color of the border around highlighted symbols.")),(0,n.x1A)("editorCursor.foreground",{dark:"#AEAFAD",light:i.Q1.black,hcDark:i.Q1.white,hcLight:"#0F4A85"},t.kg("caret","Color of the editor cursor."))),g=(0,n.x1A)("editorCursor.background",null,t.kg("editorCursorBackground","The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.")),l=((0,n.x1A)("editorMultiCursor.primary.foreground",c,t.kg("editorMultiCursorPrimaryForeground","Color of the primary editor cursor when multiple cursors are present.")),(0,n.x1A)("editorMultiCursor.primary.background",g,t.kg("editorMultiCursorPrimaryBackground","The background color of the primary editor cursor when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.")),(0,n.x1A)("editorMultiCursor.secondary.foreground",c,t.kg("editorMultiCursorSecondaryForeground","Color of secondary editor cursors when multiple cursors are present.")),(0,n.x1A)("editorMultiCursor.secondary.background",g,t.kg("editorMultiCursorSecondaryBackground","The background color of secondary editor cursors when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.")),(0,n.x1A)("editorWhitespace.foreground",{dark:"#e3e4e229",light:"#33333333",hcDark:"#e3e4e229",hcLight:"#CCCCCC"},t.kg("editorWhitespaces","Color of whitespace characters in the editor."))),h=((0,n.x1A)("editorLineNumber.foreground",{dark:"#858585",light:"#237893",hcDark:i.Q1.white,hcLight:"#292929"},t.kg("editorLineNumbers","Color of editor line numbers.")),(0,n.x1A)("editorIndentGuide.background",l,t.kg("editorIndentGuides","Color of the editor indentation guides."),!1,t.kg("deprecatedEditorIndentGuides","'editorIndentGuide.background' is deprecated. Use 'editorIndentGuide.background1' instead."))),u=(0,n.x1A)("editorIndentGuide.activeBackground",l,t.kg("editorActiveIndentGuide","Color of the active editor indentation guides."),!1,t.kg("deprecatedEditorActiveIndentGuide","'editorIndentGuide.activeBackground' is deprecated. Use 'editorIndentGuide.activeBackground1' instead.")),k=((0,n.x1A)("editorIndentGuide.background1",h,t.kg("editorIndentGuides1","Color of the editor indentation guides (1).")),(0,n.x1A)("editorIndentGuide.background2","#00000000",t.kg("editorIndentGuides2","Color of the editor indentation guides (2).")),(0,n.x1A)("editorIndentGuide.background3","#00000000",t.kg("editorIndentGuides3","Color of the editor indentation guides (3).")),(0,n.x1A)("editorIndentGuide.background4","#00000000",t.kg("editorIndentGuides4","Color of the editor indentation guides (4).")),(0,n.x1A)("editorIndentGuide.background5","#00000000",t.kg("editorIndentGuides5","Color of the editor indentation guides (5).")),(0,n.x1A)("editorIndentGuide.background6","#00000000",t.kg("editorIndentGuides6","Color of the editor indentation guides (6).")),(0,n.x1A)("editorIndentGuide.activeBackground1",u,t.kg("editorActiveIndentGuide1","Color of the active editor indentation guides (1).")),(0,n.x1A)("editorIndentGuide.activeBackground2","#00000000",t.kg("editorActiveIndentGuide2","Color of the active editor indentation guides (2).")),(0,n.x1A)("editorIndentGuide.activeBackground3","#00000000",t.kg("editorActiveIndentGuide3","Color of the active editor indentation guides (3).")),(0,n.x1A)("editorIndentGuide.activeBackground4","#00000000",t.kg("editorActiveIndentGuide4","Color of the active editor indentation guides (4).")),(0,n.x1A)("editorIndentGuide.activeBackground5","#00000000",t.kg("editorActiveIndentGuide5","Color of the active editor indentation guides (5).")),(0,n.x1A)("editorIndentGuide.activeBackground6","#00000000",t.kg("editorActiveIndentGuide6","Color of the active editor indentation guides (6).")),(0,n.x1A)("editorActiveLineNumber.foreground",{dark:"#c6c6c6",light:"#0B216F",hcDark:n.buw,hcLight:n.buw},t.kg("editorActiveLineNumber","Color of editor active line number"),!1,t.kg("deprecatedEditorActiveLineNumber","Id is deprecated. Use 'editorLineNumber.activeForeground' instead."))),s=((0,n.x1A)("editorLineNumber.activeForeground",k,t.kg("editorActiveLineNumber","Color of editor active line number")),(0,n.x1A)("editorLineNumber.dimmedForeground",null,t.kg("editorDimmedLineNumber","Color of the final editor line when editor.renderFinalNewline is set to dimmed.")),(0,n.x1A)("editorRuler.foreground",{dark:"#5A5A5A",light:i.Q1.lightgrey,hcDark:i.Q1.white,hcLight:"#292929"},t.kg("editorRuler","Color of the editor rulers.")),(0,n.x1A)("editorCodeLens.foreground",{dark:"#999999",light:"#919191",hcDark:"#999999",hcLight:"#292929"},t.kg("editorCodeLensForeground","Foreground color of editor CodeLens")),(0,n.x1A)("editorBracketMatch.background",{dark:"#0064001a",light:"#0064001a",hcDark:"#0064001a",hcLight:"#0000"},t.kg("editorBracketMatchBackground","Background color behind matching brackets")),(0,n.x1A)("editorBracketMatch.border",{dark:"#888",light:"#B9B9B9",hcDark:n.b1q,hcLight:n.b1q},t.kg("editorBracketMatchBorder","Color for matching brackets boxes")),(0,n.x1A)("editorOverviewRuler.border",{dark:"#7f7f7f4d",light:"#7f7f7f4d",hcDark:"#7f7f7f4d",hcLight:"#666666"},t.kg("editorOverviewRulerBorder","Color of the overview ruler border.")),(0,n.x1A)("editorOverviewRuler.background",null,t.kg("editorOverviewRulerBackground","Background color of the editor overview ruler.")),(0,n.x1A)("editorGutter.background",n.YtV,t.kg("editorGutter","Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.")),(0,n.x1A)("editorUnnecessaryCode.border",{dark:null,light:null,hcDark:i.Q1.fromHex("#fff").transparent(.8),hcLight:n.b1q},t.kg("unnecessaryCodeBorder","Border color of unnecessary (unused) source code in the editor.")),(0,n.x1A)("editorUnnecessaryCode.opacity",{dark:i.Q1.fromHex("#000a"),light:i.Q1.fromHex("#0007"),hcDark:null,hcLight:null},t.kg("unnecessaryCodeOpacity","Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  'editorUnnecessaryCode.border' theme color to underline unnecessary code instead of fading it out.")),(0,n.x1A)("editorGhostText.border",{dark:null,light:null,hcDark:i.Q1.fromHex("#fff").transparent(.8),hcLight:i.Q1.fromHex("#292929").transparent(.8)},t.kg("editorGhostTextBorder","Border color of ghost text in the editor.")),(0,n.x1A)("editorGhostText.foreground",{dark:i.Q1.fromHex("#ffffff56"),light:i.Q1.fromHex("#0007"),hcDark:null,hcLight:null},t.kg("editorGhostTextForeground","Foreground color of the ghost text in the editor.")),(0,n.x1A)("editorGhostText.background",null,t.kg("editorGhostTextBackground","Background color of the ghost text in the editor.")),new i.Q1(new i.bU(0,122,204,.6))),f=((0,n.x1A)("editorOverviewRuler.rangeHighlightForeground",s,t.kg("overviewRulerRangeHighlight","Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations."),!0),(0,n.x1A)("editorOverviewRuler.errorForeground",{dark:new i.Q1(new i.bU(255,18,18,.7)),light:new i.Q1(new i.bU(255,18,18,.7)),hcDark:new i.Q1(new i.bU(255,50,50,1)),hcLight:"#B5200D"},t.kg("overviewRuleError","Overview ruler marker color for errors."))),b=(0,n.x1A)("editorOverviewRuler.warningForeground",{dark:n.Hng,light:n.Hng,hcDark:n.Stt,hcLight:n.Stt},t.kg("overviewRuleWarning","Overview ruler marker color for warnings.")),p=(0,n.x1A)("editorOverviewRuler.infoForeground",{dark:n.pOz,light:n.pOz,hcDark:n.IIb,hcLight:n.IIb},t.kg("overviewRuleInfo","Overview ruler marker color for infos.")),m=(0,n.x1A)("editorBracketHighlight.foreground1",{dark:"#FFD700",light:"#0431FAFF",hcDark:"#FFD700",hcLight:"#0431FAFF"},t.kg("editorBracketHighlightForeground1","Foreground color of brackets (1). Requires enabling bracket pair colorization.")),B=(0,n.x1A)("editorBracketHighlight.foreground2",{dark:"#DA70D6",light:"#319331FF",hcDark:"#DA70D6",hcLight:"#319331FF"},t.kg("editorBracketHighlightForeground2","Foreground color of brackets (2). Requires enabling bracket pair colorization.")),v=(0,n.x1A)("editorBracketHighlight.foreground3",{dark:"#179FFF",light:"#7B3814FF",hcDark:"#87CEFA",hcLight:"#7B3814FF"},t.kg("editorBracketHighlightForeground3","Foreground color of brackets (3). Requires enabling bracket pair colorization.")),F=(0,n.x1A)("editorBracketHighlight.foreground4","#00000000",t.kg("editorBracketHighlightForeground4","Foreground color of brackets (4). Requires enabling bracket pair colorization.")),w=(0,n.x1A)("editorBracketHighlight.foreground5","#00000000",t.kg("editorBracketHighlightForeground5","Foreground color of brackets (5). Requires enabling bracket pair colorization.")),D=(0,n.x1A)("editorBracketHighlight.foreground6","#00000000",t.kg("editorBracketHighlightForeground6","Foreground color of brackets (6). Requires enabling bracket pair colorization.")),L=(0,n.x1A)("editorBracketHighlight.unexpectedBracket.foreground",{dark:new i.Q1(new i.bU(255,18,18,.8)),light:new i.Q1(new i.bU(255,18,18,.8)),hcDark:"new Color(new RGBA(255, 50, 50, 1))",hcLight:"#B5200D"},t.kg("editorBracketHighlightUnexpectedBracketForeground","Foreground color of unexpected brackets."));(0,n.x1A)("editorBracketPairGuide.background1","#00000000",t.kg("editorBracketPairGuide.background1","Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.background2","#00000000",t.kg("editorBracketPairGuide.background2","Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.background3","#00000000",t.kg("editorBracketPairGuide.background3","Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.background4","#00000000",t.kg("editorBracketPairGuide.background4","Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.background5","#00000000",t.kg("editorBracketPairGuide.background5","Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.background6","#00000000",t.kg("editorBracketPairGuide.background6","Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.activeBackground1","#00000000",t.kg("editorBracketPairGuide.activeBackground1","Background color of active bracket pair guides (1). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.activeBackground2","#00000000",t.kg("editorBracketPairGuide.activeBackground2","Background color of active bracket pair guides (2). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.activeBackground3","#00000000",t.kg("editorBracketPairGuide.activeBackground3","Background color of active bracket pair guides (3). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.activeBackground4","#00000000",t.kg("editorBracketPairGuide.activeBackground4","Background color of active bracket pair guides (4). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.activeBackground5","#00000000",t.kg("editorBracketPairGuide.activeBackground5","Background color of active bracket pair guides (5). Requires enabling bracket pair guides.")),(0,n.x1A)("editorBracketPairGuide.activeBackground6","#00000000",t.kg("editorBracketPairGuide.activeBackground6","Background color of active bracket pair guides (6). Requires enabling bracket pair guides.")),(0,n.x1A)("editorUnicodeHighlight.border",n.Hng,t.kg("editorUnicodeHighlight.border","Border color used to highlight unicode characters.")),(0,n.x1A)("editorUnicodeHighlight.background",n.whs,t.kg("editorUnicodeHighlight.background","Background color used to highlight unicode characters.")),(0,d.zy)(((r,e)=>{const o=r.getColor(n.YtV),t=r.getColor(a),i=t&&!t.isTransparent()?t:o;i&&e.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${i}; }`)}))},37550:(r,e,o)=>{o.d(e,{buw:()=>A,b1q:()=>L,YtV:()=>Q,Ubg:()=>W,IIb:()=>P,pOz:()=>M,whs:()=>O,Stt:()=>R,Hng:()=>q,yLC:()=>cr,KoI:()=>dr,uMG:()=>ar,x1A:()=>h});var t=o(67477),i=o(90377),n=o(96084),d=o(76535),a=o(35679),c=o(37638),g=o(96005);const l=new class{constructor(){this._onDidChangeSchema=new d.vl,this.onDidChangeSchema=this._onDidChangeSchema.event,this.colorSchema={type:"object",properties:{}},this.colorReferenceSchema={type:"string",enum:[],enumDescriptions:[]},this.colorsById={}}registerColor(r,e,o,t=!1,i){const n={id:r,description:o,defaults:e,needsTransparency:t,deprecationMessage:i};this.colorsById[r]=n;const d={type:"string",format:"color-hex",defaultSnippets:[{body:"${1:#ff0000}"}]};return i&&(d.deprecationMessage=i),t&&(d.pattern="^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$",d.patternErrorMessage=g.kg("transparecyRequired","This color must be transparent or it will obscure content")),this.colorSchema.properties[r]={description:o,oneOf:[d,{type:"string",const:"default",description:g.kg("useDefault","Use the default color.")}]},this.colorReferenceSchema.enum.push(r),this.colorReferenceSchema.enumDescriptions.push(o),this._onDidChangeSchema.fire(),r}getColors(){return Object.keys(this.colorsById).map((r=>this.colorsById[r]))}resolveDefaultColor(r,e){const o=this.colorsById[r];if(o?.defaults)return p(null!==(t=o.defaults)&&"object"==typeof t&&"light"in t&&"dark"in t?o.defaults[e.type]:o.defaults,e);var t}getColorSchema(){return this.colorSchema}toString(){return Object.keys(this.colorsById).sort(((r,e)=>{const o=-1===r.indexOf(".")?0:1,t=-1===e.indexOf(".")?0:1;return o!==t?o-t:r.localeCompare(e)})).map((r=>`- \`${r}\`: ${this.colorsById[r].description}`)).join("\n")}};function h(r,e,o,t,i){return l.registerColor(r,e,o,t,i)}function u(r,e){return{op:0,value:r,factor:e}}function k(r,e){return{op:1,value:r,factor:e}}function s(r,e){return{op:2,value:r,factor:e}}function f(...r){return{op:4,values:r}}function b(r,e,o,t){return{op:5,value:r,background:e,factor:o,transparency:t}}function p(r,e){if(null!==r)return"string"==typeof r?"#"===r[0]?n.Q1.fromHex(r):e.getColor(r):r instanceof n.Q1?r:"object"==typeof r?function(r,e){switch(r.op){case 0:return p(r.value,e)?.darken(r.factor);case 1:return p(r.value,e)?.lighten(r.factor);case 2:return p(r.value,e)?.transparent(r.factor);case 3:{const o=p(r.background,e);return o?p(r.value,e)?.makeOpaque(o):p(r.value,e)}case 4:for(const o of r.values){const r=p(o,e);if(r)return r}return;case 6:return p(e.defines(r.if)?r.then:r.else,e);case 5:{const o=p(r.value,e);if(!o)return;const t=p(r.background,e);return t?o.isDarkerThan(t)?n.Q1.getLighterColor(o,t,r.factor).transparent(r.transparency):n.Q1.getDarkerColor(o,t,r.factor).transparent(r.transparency):o.transparent(r.factor*r.transparency)}default:throw(0,t.xb)(r)}}(r,e):void 0}c.O.add("base.contributions.colors",l);const m="vscode://schemas/workbench-colors",B=c.O.as(a.F.JSONContribution);B.registerSchema(m,l.getColorSchema());const v=new i.uC((()=>B.notifySchemaChanged(m)),200);l.onDidChangeSchema((()=>{v.isScheduled()||v.schedule()}));const F=h("foreground",{dark:"#CCCCCC",light:"#616161",hcDark:"#FFFFFF",hcLight:"#292929"},g.kg("foreground","Overall foreground color. This color is only used if not overridden by a component.")),w=(h("disabledForeground",{dark:"#CCCCCC80",light:"#61616180",hcDark:"#A5A5A5",hcLight:"#7F7F7F"},g.kg("disabledForeground","Overall foreground for disabled elements. This color is only used if not overridden by a component.")),h("errorForeground",{dark:"#F48771",light:"#A1260D",hcDark:"#F48771",hcLight:"#B5200D"},g.kg("errorForeground","Overall foreground color for error messages. This color is only used if not overridden by a component.")),h("descriptionForeground",{light:"#717171",dark:s(F,.7),hcDark:s(F,.7),hcLight:s(F,.7)},g.kg("descriptionForeground","Foreground color for description text providing additional information, for example for a label.")),h("icon.foreground",{dark:"#C5C5C5",light:"#424242",hcDark:"#FFFFFF",hcLight:"#292929"},g.kg("iconForeground","The default color for icons in the workbench."))),D=h("focusBorder",{dark:"#007FD4",light:"#0090F1",hcDark:"#F38518",hcLight:"#006BBD"},g.kg("focusBorder","Overall border color for focused elements. This color is only used if not overridden by a component.")),L=h("contrastBorder",{light:null,dark:null,hcDark:"#6FC3DF",hcLight:"#0F4A85"},g.kg("contrastBorder","An extra border around elements to separate them from others for greater contrast.")),A=h("contrastActiveBorder",{light:null,dark:null,hcDark:D,hcLight:D},g.kg("activeContrastBorder","An extra border around active elements to separate them from others for greater contrast.")),C=(h("selection.background",null,g.kg("selectionBackground","The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.")),h("textLink.foreground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},g.kg("textLinkForeground","Foreground color for links in text.")),h("textLink.activeForeground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},g.kg("textLinkActiveForeground","Foreground color for links in text when clicked on and on mouse hover.")),h("textSeparator.foreground",{light:"#0000002e",dark:"#ffffff2e",hcDark:n.Q1.black,hcLight:"#292929"},g.kg("textSeparatorForeground","Color for text separators.")),h("textPreformat.foreground",{light:"#A31515",dark:"#D7BA7D",hcDark:"#000000",hcLight:"#FFFFFF"},g.kg("textPreformatForeground","Foreground color for preformatted text segments.")),h("textPreformat.background",{light:"#0000001A",dark:"#FFFFFF1A",hcDark:"#FFFFFF",hcLight:"#09345f"},g.kg("textPreformatBackground","Background color for preformatted text segments.")),h("textBlockQuote.background",{light:"#f2f2f2",dark:"#222222",hcDark:null,hcLight:"#F2F2F2"},g.kg("textBlockQuoteBackground","Background color for block quotes in text.")),h("textBlockQuote.border",{light:"#007acc80",dark:"#007acc80",hcDark:n.Q1.white,hcLight:"#292929"},g.kg("textBlockQuoteBorder","Border color for block quotes in text.")),h("textCodeBlock.background",{light:"#dcdcdc66",dark:"#0a0a0a66",hcDark:n.Q1.black,hcLight:"#F2F2F2"},g.kg("textCodeBlockBackground","Background color for code blocks in text.")),h("sash.hoverBorder",D,g.kg("sashActiveBorder","Border color of active sashes.")),h("badge.background",{dark:"#4D4D4D",light:"#C4C4C4",hcDark:n.Q1.black,hcLight:"#0F4A85"},g.kg("badgeBackground","Badge background color. Badges are small information labels, e.g. for search results count."))),y=(h("badge.foreground",{dark:n.Q1.white,light:"#333",hcDark:n.Q1.white,hcLight:n.Q1.white},g.kg("badgeForeground","Badge foreground color. Badges are small information labels, e.g. for search results count.")),h("scrollbar.shadow",{dark:"#000000",light:"#DDDDDD",hcDark:null,hcLight:null},g.kg("scrollbarShadow","Scrollbar shadow to indicate that the view is scrolled."))),x=h("scrollbarSlider.background",{dark:n.Q1.fromHex("#797979").transparent(.4),light:n.Q1.fromHex("#646464").transparent(.4),hcDark:s(L,.6),hcLight:s(L,.4)},g.kg("scrollbarSliderBackground","Scrollbar slider background color.")),H=h("scrollbarSlider.hoverBackground",{dark:n.Q1.fromHex("#646464").transparent(.7),light:n.Q1.fromHex("#646464").transparent(.7),hcDark:s(L,.8),hcLight:s(L,.8)},g.kg("scrollbarSliderHoverBackground","Scrollbar slider background color when hovering.")),I=h("scrollbarSlider.activeBackground",{dark:n.Q1.fromHex("#BFBFBF").transparent(.4),light:n.Q1.fromHex("#000000").transparent(.6),hcDark:L,hcLight:L},g.kg("scrollbarSliderActiveBackground","Scrollbar slider background color when clicked on.")),Q=(h("progressBar.background",{dark:n.Q1.fromHex("#0E70C0"),light:n.Q1.fromHex("#0E70C0"),hcDark:L,hcLight:L},g.kg("progressBarBackground","Background color of the progress bar that can show for long running operations.")),h("editor.background",{light:"#ffffff",dark:"#1E1E1E",hcDark:n.Q1.black,hcLight:n.Q1.white},g.kg("editorBackground","Editor background color."))),T=(h("editor.foreground",{light:"#333333",dark:"#BBBBBB",hcDark:n.Q1.white,hcLight:F},g.kg("editorForeground","Editor default foreground color.")),h("editorStickyScroll.background",Q,g.kg("editorStickyScrollBackground","Background color of sticky scroll in the editor")),h("editorStickyScrollHover.background",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},g.kg("editorStickyScrollHoverBackground","Background color of sticky scroll on hover in the editor")),h("editorStickyScroll.border",{dark:null,light:null,hcDark:L,hcLight:L},g.kg("editorStickyScrollBorder","Border color of sticky scroll in the editor")),h("editorStickyScroll.shadow",y,g.kg("editorStickyScrollShadow"," Shadow color of sticky scroll in the editor")),h("editorWidget.background",{dark:"#252526",light:"#F3F3F3",hcDark:"#0C141F",hcLight:n.Q1.white},g.kg("editorWidgetBackground","Background color of editor widgets, such as find/replace."))),S=h("editorWidget.foreground",F,g.kg("editorWidgetForeground","Foreground color of editor widgets, such as find/replace.")),E=h("editorWidget.border",{dark:"#454545",light:"#C8C8C8",hcDark:L,hcLight:L},g.kg("editorWidgetBorder","Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.")),G=(h("editorWidget.resizeBorder",null,g.kg("editorWidgetResizeBorder","Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.")),h("editorError.background",null,g.kg("editorError.background","Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),h("editorError.foreground",{dark:"#F14C4C",light:"#E51400",hcDark:"#F48771",hcLight:"#B5200D"},g.kg("editorError.foreground","Foreground color of error squigglies in the editor."))),O=(h("editorError.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#E47777").transparent(.8),hcLight:"#B5200D"},g.kg("errorBorder","If set, color of double underlines for errors in the editor.")),h("editorWarning.background",null,g.kg("editorWarning.background","Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0)),q=h("editorWarning.foreground",{dark:"#CCA700",light:"#BF8803",hcDark:"#FFD370",hcLight:"#895503"},g.kg("editorWarning.foreground","Foreground color of warning squigglies in the editor.")),R=h("editorWarning.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#FFCC00").transparent(.8),hcLight:n.Q1.fromHex("#FFCC00").transparent(.8)},g.kg("warningBorder","If set, color of double underlines for warnings in the editor.")),M=(h("editorInfo.background",null,g.kg("editorInfo.background","Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),h("editorInfo.foreground",{dark:"#3794FF",light:"#1a85ff",hcDark:"#3794FF",hcLight:"#1a85ff"},g.kg("editorInfo.foreground","Foreground color of info squigglies in the editor."))),P=h("editorInfo.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#3794FF").transparent(.8),hcLight:"#292929"},g.kg("infoBorder","If set, color of double underlines for infos in the editor.")),U=(h("editorHint.foreground",{dark:n.Q1.fromHex("#eeeeee").transparent(.7),light:"#6c6c6c",hcDark:null,hcLight:null},g.kg("editorHint.foreground","Foreground color of hint squigglies in the editor.")),h("editorHint.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#eeeeee").transparent(.8),hcLight:"#292929"},g.kg("hintBorder","If set, color of double underlines for hints in the editor.")),h("editorLink.activeForeground",{dark:"#4E94CE",light:n.Q1.blue,hcDark:n.Q1.cyan,hcLight:"#292929"},g.kg("activeLinkForeground","Color of active links.")),h("editor.selectionBackground",{light:"#ADD6FF",dark:"#264F78",hcDark:"#f3f518",hcLight:"#0F4A85"},g.kg("editorSelectionBackground","Color of the editor selection."))),W=(h("editor.selectionForeground",{light:null,dark:null,hcDark:"#000000",hcLight:n.Q1.white},g.kg("editorSelectionForeground","Color of the selected text for high contrast.")),h("editor.inactiveSelectionBackground",{light:s(U,.5),dark:s(U,.5),hcDark:s(U,.7),hcLight:s(U,.5)},g.kg("editorInactiveSelection","Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations."),!0),h("editor.selectionHighlightBackground",{light:b(U,Q,.3,.6),dark:b(U,Q,.3,.6),hcDark:null,hcLight:null},g.kg("editorSelectionHighlight","Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations."),!0),h("editor.selectionHighlightBorder",{light:null,dark:null,hcDark:A,hcLight:A},g.kg("editorSelectionHighlightBorder","Border color for regions with the same content as the selection.")),h("editor.findMatchBackground",{light:"#A8AC94",dark:"#515C6A",hcDark:null,hcLight:null},g.kg("editorFindMatch","Color of the current search match.")),h("editor.findMatchForeground",null,g.kg("editorFindMatchForeground","Text color of the current search match.")),h("editor.findMatchHighlightBackground",{light:"#EA5C0055",dark:"#EA5C0055",hcDark:null,hcLight:null},g.kg("findMatchHighlight","Color of the other search matches. The color must not be opaque so as not to hide underlying decorations."),!0)),z=(h("editor.findMatchHighlightForeground",null,g.kg("findMatchHighlightForeground","Foreground color of the other search matches."),!0),h("editor.findRangeHighlightBackground",{dark:"#3a3d4166",light:"#b4b4b44d",hcDark:null,hcLight:null},g.kg("findRangeHighlight","Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),h("editor.findMatchBorder",{light:null,dark:null,hcDark:A,hcLight:A},g.kg("editorFindMatchBorder","Border color of the current search match.")),h("editor.findMatchHighlightBorder",{light:null,dark:null,hcDark:A,hcLight:A},g.kg("findMatchHighlightBorder","Border color of the other search matches."))),V=(h("editor.findRangeHighlightBorder",{dark:null,light:null,hcDark:s(A,.4),hcLight:s(A,.4)},g.kg("findRangeHighlightBorder","Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),h("editor.hoverHighlightBackground",{light:"#ADD6FF26",dark:"#264f7840",hcDark:"#ADD6FF26",hcLight:null},g.kg("hoverHighlight","Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations."),!0),h("editorHoverWidget.background",T,g.kg("hoverBackground","Background color of the editor hover."))),N=(h("editorHoverWidget.foreground",S,g.kg("hoverForeground","Foreground color of the editor hover.")),h("editorHoverWidget.border",E,g.kg("hoverBorder","Border color of the editor hover.")),h("editorHoverWidget.statusBarBackground",{dark:k(V,.2),light:u(V,.05),hcDark:T,hcLight:T},g.kg("statusBarBackground","Background color of the editor hover status bar.")),h("editorInlayHint.foreground",{dark:"#969696",light:"#969696",hcDark:n.Q1.white,hcLight:n.Q1.black},g.kg("editorInlayHintForeground","Foreground color of inline hints"))),_=h("editorInlayHint.background",{dark:s(C,.1),light:s(C,.1),hcDark:s(n.Q1.white,.1),hcLight:s(C,.1)},g.kg("editorInlayHintBackground","Background color of inline hints")),j=(h("editorInlayHint.typeForeground",N,g.kg("editorInlayHintForegroundTypes","Foreground color of inline hints for types")),h("editorInlayHint.typeBackground",_,g.kg("editorInlayHintBackgroundTypes","Background color of inline hints for types")),h("editorInlayHint.parameterForeground",N,g.kg("editorInlayHintForegroundParameter","Foreground color of inline hints for parameters")),h("editorInlayHint.parameterBackground",_,g.kg("editorInlayHintBackgroundParameter","Background color of inline hints for parameters")),h("editorLightBulb.foreground",{dark:"#FFCC00",light:"#DDB100",hcDark:"#FFCC00",hcLight:"#007ACC"},g.kg("editorLightBulbForeground","The color used for the lightbulb actions icon."))),K=(h("editorLightBulbAutoFix.foreground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},g.kg("editorLightBulbAutoFixForeground","The color used for the lightbulb auto fix actions icon.")),h("editorLightBulbAi.foreground",j,g.kg("editorLightBulbAiForeground","The color used for the lightbulb AI icon.")),h("editor.snippetTabstopHighlightBackground",{dark:new n.Q1(new n.bU(124,124,124,.3)),light:new n.Q1(new n.bU(10,50,100,.2)),hcDark:new n.Q1(new n.bU(124,124,124,.3)),hcLight:new n.Q1(new n.bU(10,50,100,.2))},g.kg("snippetTabstopHighlightBackground","Highlight background color of a snippet tabstop.")),h("editor.snippetTabstopHighlightBorder",null,g.kg("snippetTabstopHighlightBorder","Highlight border color of a snippet tabstop.")),h("editor.snippetFinalTabstopHighlightBackground",null,g.kg("snippetFinalTabstopHighlightBackground","Highlight background color of the final tabstop of a snippet.")),h("editor.snippetFinalTabstopHighlightBorder",{dark:"#525252",light:new n.Q1(new n.bU(10,50,100,.5)),hcDark:"#525252",hcLight:"#292929"},g.kg("snippetFinalTabstopHighlightBorder","Highlight border color of the final tabstop of a snippet.")),new n.Q1(new n.bU(155,185,85,.2))),Y=new n.Q1(new n.bU(255,0,0,.2)),$=(h("diffEditor.insertedTextBackground",{dark:"#9ccc2c33",light:"#9ccc2c40",hcDark:null,hcLight:null},g.kg("diffEditorInserted","Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),h("diffEditor.removedTextBackground",{dark:"#ff000033",light:"#ff000033",hcDark:null,hcLight:null},g.kg("diffEditorRemoved","Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),h("diffEditor.insertedLineBackground",{dark:K,light:K,hcDark:null,hcLight:null},g.kg("diffEditorInsertedLines","Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),h("diffEditor.removedLineBackground",{dark:Y,light:Y,hcDark:null,hcLight:null},g.kg("diffEditorRemovedLines","Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),h("diffEditorGutter.insertedLineBackground",null,g.kg("diffEditorInsertedLineGutter","Background color for the margin where lines got inserted.")),h("diffEditorGutter.removedLineBackground",null,g.kg("diffEditorRemovedLineGutter","Background color for the margin where lines got removed.")),h("diffEditorOverview.insertedForeground",null,g.kg("diffEditorOverviewInserted","Diff overview ruler foreground for inserted content.")),h("diffEditorOverview.removedForeground",null,g.kg("diffEditorOverviewRemoved","Diff overview ruler foreground for removed content.")),h("diffEditor.insertedTextBorder",{dark:null,light:null,hcDark:"#33ff2eff",hcLight:"#374E06"},g.kg("diffEditorInsertedOutline","Outline color for the text that got inserted.")),h("diffEditor.removedTextBorder",{dark:null,light:null,hcDark:"#FF008F",hcLight:"#AD0707"},g.kg("diffEditorRemovedOutline","Outline color for text that got removed.")),h("diffEditor.border",{dark:null,light:null,hcDark:L,hcLight:L},g.kg("diffEditorBorder","Border color between the two text editors.")),h("diffEditor.diagonalFill",{dark:"#cccccc33",light:"#22222233",hcDark:null,hcLight:null},g.kg("diffDiagonalFill","Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.")),h("diffEditor.unchangedRegionBackground","sideBar.background",g.kg("diffEditor.unchangedRegionBackground","The background color of unchanged blocks in the diff editor.")),h("diffEditor.unchangedRegionForeground","foreground",g.kg("diffEditor.unchangedRegionForeground","The foreground color of unchanged blocks in the diff editor.")),h("diffEditor.unchangedCodeBackground",{dark:"#74747429",light:"#b8b8b829",hcDark:null,hcLight:null},g.kg("diffEditor.unchangedCodeBackground","The background color of unchanged code in the diff editor.")),h("widget.shadow",{dark:s(n.Q1.black,.36),light:s(n.Q1.black,.16),hcDark:null,hcLight:null},g.kg("widgetShadow","Shadow color of widgets such as find/replace inside the editor."))),J=(h("widget.border",{dark:null,light:null,hcDark:L,hcLight:L},g.kg("widgetBorder","Border color of widgets such as find/replace inside the editor.")),h("toolbar.hoverBackground",{dark:"#5a5d5e50",light:"#b8b8b850",hcDark:null,hcLight:null},g.kg("toolbarHoverBackground","Toolbar background when hovering over actions using the mouse"))),Z=(h("toolbar.hoverOutline",{dark:null,light:null,hcDark:A,hcLight:A},g.kg("toolbarHoverOutline","Toolbar outline when hovering over actions using the mouse")),h("toolbar.activeBackground",{dark:k(J,.1),light:u(J,.1),hcDark:null,hcLight:null},g.kg("toolbarActiveBackground","Toolbar background when holding the mouse over actions")),h("breadcrumb.foreground",s(F,.8),g.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items.")),h("breadcrumb.background",Q,g.kg("breadcrumbsBackground","Background color of breadcrumb items.")),h("breadcrumb.focusForeground",{light:u(F,.2),dark:k(F,.1),hcDark:k(F,.1),hcLight:k(F,.1)},g.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items.")),h("breadcrumb.activeSelectionForeground",{light:u(F,.2),dark:k(F,.1),hcDark:k(F,.1),hcLight:k(F,.1)},g.kg("breadcrumbsSelectedForeground","Color of selected breadcrumb items.")),h("breadcrumbPicker.background",T,g.kg("breadcrumbsSelectedBackground","Background color of breadcrumb item picker.")),n.Q1.fromHex("#40C8AE").transparent(.5)),X=n.Q1.fromHex("#40A6FF").transparent(.5),rr=n.Q1.fromHex("#606060").transparent(.4),er=h("merge.currentHeaderBackground",{dark:Z,light:Z,hcDark:null,hcLight:null},g.kg("mergeCurrentHeaderBackground","Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),or=(h("merge.currentContentBackground",s(er,.4),g.kg("mergeCurrentContentBackground","Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),h("merge.incomingHeaderBackground",{dark:X,light:X,hcDark:null,hcLight:null},g.kg("mergeIncomingHeaderBackground","Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),tr=(h("merge.incomingContentBackground",s(or,.4),g.kg("mergeIncomingContentBackground","Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),h("merge.commonHeaderBackground",{dark:rr,light:rr,hcDark:null,hcLight:null},g.kg("mergeCommonHeaderBackground","Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),ir=(h("merge.commonContentBackground",s(tr,.4),g.kg("mergeCommonContentBackground","Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),h("merge.border",{dark:null,light:null,hcDark:"#C3DF6F",hcLight:"#007ACC"},g.kg("mergeBorder","Border color on headers and the splitter in inline merge-conflicts."))),nr=(h("editorOverviewRuler.currentContentForeground",{dark:s(er,1),light:s(er,1),hcDark:ir,hcLight:ir},g.kg("overviewRulerCurrentContentForeground","Current overview ruler foreground for inline merge-conflicts.")),h("editorOverviewRuler.incomingContentForeground",{dark:s(or,1),light:s(or,1),hcDark:ir,hcLight:ir},g.kg("overviewRulerIncomingContentForeground","Incoming overview ruler foreground for inline merge-conflicts.")),h("editorOverviewRuler.commonContentForeground",{dark:s(tr,1),light:s(tr,1),hcDark:ir,hcLight:ir},g.kg("overviewRulerCommonContentForeground","Common ancestor overview ruler foreground for inline merge-conflicts.")),h("editorOverviewRuler.findMatchForeground",{dark:"#d186167e",light:"#d186167e",hcDark:"#AB5A00",hcLight:"#AB5A00"},g.kg("overviewRulerFindMatchForeground","Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations."),!0),h("editorOverviewRuler.selectionHighlightForeground","#A0A0A0CC",g.kg("overviewRulerSelectionHighlightForeground","Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations."),!0),h("problemsErrorIcon.foreground",G,g.kg("problemsErrorIconForeground","The color used for the problems error icon.")),h("problemsWarningIcon.foreground",q,g.kg("problemsWarningIconForeground","The color used for the problems warning icon.")),h("problemsInfoIcon.foreground",M,g.kg("problemsInfoIconForeground","The color used for the problems info icon.")),h("minimap.findMatchHighlight",{light:"#d18616",dark:"#d18616",hcDark:"#AB5A00",hcLight:"#0F4A85"},g.kg("minimapFindMatchHighlight","Minimap marker color for find matches."),!0)),dr=(h("minimap.selectionOccurrenceHighlight",{light:"#c9c9c9",dark:"#676767",hcDark:"#ffffff",hcLight:"#0F4A85"},g.kg("minimapSelectionOccurrenceHighlight","Minimap marker color for repeating editor selections."),!0),h("minimap.selectionHighlight",{light:"#ADD6FF",dark:"#264F78",hcDark:"#ffffff",hcLight:"#0F4A85"},g.kg("minimapSelectionHighlight","Minimap marker color for the editor selection."),!0),h("minimap.infoHighlight",{dark:M,light:M,hcDark:P,hcLight:P},g.kg("minimapInfo","Minimap marker color for infos."))),ar=h("minimap.warningHighlight",{dark:q,light:q,hcDark:R,hcLight:R},g.kg("overviewRuleWarning","Minimap marker color for warnings.")),cr=h("minimap.errorHighlight",{dark:new n.Q1(new n.bU(255,18,18,.7)),light:new n.Q1(new n.bU(255,18,18,.7)),hcDark:new n.Q1(new n.bU(255,50,50,1)),hcLight:"#B5200D"},g.kg("minimapError","Minimap marker color for errors.")),gr=(h("minimap.background",null,g.kg("minimapBackground","Minimap background color.")),h("minimap.foregroundOpacity",n.Q1.fromHex("#000f"),g.kg("minimapForegroundOpacity",'Opacity of foreground elements rendered in the minimap. For example, "#000000c0" will render the elements with 75% opacity.')),h("minimapSlider.background",s(x,.5),g.kg("minimapSliderBackground","Minimap slider background color.")),h("minimapSlider.hoverBackground",s(H,.5),g.kg("minimapSliderHoverBackground","Minimap slider background color when hovering.")),h("minimapSlider.activeBackground",s(I,.5),g.kg("minimapSliderActiveBackground","Minimap slider background color when clicked on.")),h("charts.foreground",F,g.kg("chartsForeground","The foreground color used in charts.")),h("charts.lines",s(F,.5),g.kg("chartsLines","The color used for horizontal lines in charts.")),h("charts.red",G,g.kg("chartsRed","The red color used in chart visualizations.")),h("charts.blue",M,g.kg("chartsBlue","The blue color used in chart visualizations.")),h("charts.yellow",q,g.kg("chartsYellow","The yellow color used in chart visualizations.")),h("charts.orange",nr,g.kg("chartsOrange","The orange color used in chart visualizations.")),h("charts.green",{dark:"#89D185",light:"#388A34",hcDark:"#89D185",hcLight:"#374e06"},g.kg("chartsGreen","The green color used in chart visualizations.")),h("charts.purple",{dark:"#B180D7",light:"#652D90",hcDark:"#B180D7",hcLight:"#652D90"},g.kg("chartsPurple","The purple color used in chart visualizations.")),h("input.background",{dark:"#3C3C3C",light:n.Q1.white,hcDark:n.Q1.black,hcLight:n.Q1.white},g.kg("inputBoxBackground","Input box background.")),h("input.foreground",F,g.kg("inputBoxForeground","Input box foreground.")),h("input.border",{dark:null,light:null,hcDark:L,hcLight:L},g.kg("inputBoxBorder","Input box border.")),h("inputOption.activeBorder",{dark:"#007ACC",light:"#007ACC",hcDark:L,hcLight:L},g.kg("inputBoxActiveOptionBorder","Border color of activated options in input fields."))),lr=h("inputOption.hoverBackground",{dark:"#5a5d5e80",light:"#b8b8b850",hcDark:null,hcLight:null},g.kg("inputOption.hoverBackground","Background color of activated options in input fields.")),hr=h("inputOption.activeBackground",{dark:s(D,.4),light:s(D,.2),hcDark:n.Q1.transparent,hcLight:n.Q1.transparent},g.kg("inputOption.activeBackground","Background hover color of options in input fields.")),ur=h("inputOption.activeForeground",{dark:n.Q1.white,light:n.Q1.black,hcDark:F,hcLight:F},g.kg("inputOption.activeForeground","Foreground color of activated options in input fields.")),kr=(h("input.placeholderForeground",{light:s(F,.5),dark:s(F,.5),hcDark:s(F,.7),hcLight:s(F,.7)},g.kg("inputPlaceholderForeground","Input box foreground color for placeholder text.")),h("inputValidation.infoBackground",{dark:"#063B49",light:"#D6ECF2",hcDark:n.Q1.black,hcLight:n.Q1.white},g.kg("inputValidationInfoBackground","Input validation background color for information severity.")),h("inputValidation.infoForeground",{dark:null,light:null,hcDark:null,hcLight:F},g.kg("inputValidationInfoForeground","Input validation foreground color for information severity.")),h("inputValidation.infoBorder",{dark:"#007acc",light:"#007acc",hcDark:L,hcLight:L},g.kg("inputValidationInfoBorder","Input validation border color for information severity.")),h("inputValidation.warningBackground",{dark:"#352A05",light:"#F6F5D2",hcDark:n.Q1.black,hcLight:n.Q1.white},g.kg("inputValidationWarningBackground","Input validation background color for warning severity.")),h("inputValidation.warningForeground",{dark:null,light:null,hcDark:null,hcLight:F},g.kg("inputValidationWarningForeground","Input validation foreground color for warning severity.")),h("inputValidation.warningBorder",{dark:"#B89500",light:"#B89500",hcDark:L,hcLight:L},g.kg("inputValidationWarningBorder","Input validation border color for warning severity.")),h("inputValidation.errorBackground",{dark:"#5A1D1D",light:"#F2DEDE",hcDark:n.Q1.black,hcLight:n.Q1.white},g.kg("inputValidationErrorBackground","Input validation background color for error severity.")),h("inputValidation.errorForeground",{dark:null,light:null,hcDark:null,hcLight:F},g.kg("inputValidationErrorForeground","Input validation foreground color for error severity.")),h("inputValidation.errorBorder",{dark:"#BE1100",light:"#BE1100",hcDark:L,hcLight:L},g.kg("inputValidationErrorBorder","Input validation border color for error severity.")),h("dropdown.background",{dark:"#3C3C3C",light:n.Q1.white,hcDark:n.Q1.black,hcLight:n.Q1.white},g.kg("dropdownBackground","Dropdown background."))),sr=(h("dropdown.listBackground",{dark:null,light:null,hcDark:n.Q1.black,hcLight:n.Q1.white},g.kg("dropdownListBackground","Dropdown list background.")),h("dropdown.foreground",{dark:"#F0F0F0",light:F,hcDark:n.Q1.white,hcLight:F},g.kg("dropdownForeground","Dropdown foreground."))),fr=h("dropdown.border",{dark:kr,light:"#CECECE",hcDark:L,hcLight:L},g.kg("dropdownBorder","Dropdown border.")),br=h("button.foreground",n.Q1.white,g.kg("buttonForeground","Button foreground color.")),pr=(h("button.separator",s(br,.4),g.kg("buttonSeparator","Button separator color.")),h("button.background",{dark:"#0E639C",light:"#007ACC",hcDark:null,hcLight:"#0F4A85"},g.kg("buttonBackground","Button background color."))),mr=(h("button.hoverBackground",{dark:k(pr,.2),light:u(pr,.2),hcDark:pr,hcLight:pr},g.kg("buttonHoverBackground","Button background color when hovering.")),h("button.border",L,g.kg("buttonBorder","Button border color.")),h("button.secondaryForeground",{dark:n.Q1.white,light:n.Q1.white,hcDark:n.Q1.white,hcLight:F},g.kg("buttonSecondaryForeground","Secondary button foreground color.")),h("button.secondaryBackground",{dark:"#3A3D41",light:"#5F6A79",hcDark:null,hcLight:n.Q1.white},g.kg("buttonSecondaryBackground","Secondary button background color."))),Br=(h("button.secondaryHoverBackground",{dark:k(mr,.2),light:u(mr,.2),hcDark:null,hcLight:null},g.kg("buttonSecondaryHoverBackground","Secondary button background color when hovering.")),h("radio.activeForeground",ur,g.kg("radioActiveForeground","Foreground color of active radio option."))),vr=(h("radio.activeBackground",hr,g.kg("radioBackground","Background color of active radio option.")),h("radio.activeBorder",gr,g.kg("radioActiveBorder","Border color of the active radio option.")),h("radio.inactiveForeground",null,g.kg("radioInactiveForeground","Foreground color of inactive radio option.")),h("radio.inactiveBackground",null,g.kg("radioInactiveBackground","Background color of inactive radio option.")),h("radio.inactiveBorder",{light:s(Br,.2),dark:s(Br,.2),hcDark:s(Br,.4),hcLight:s(Br,.2)},g.kg("radioInactiveBorder","Border color of the inactive radio option.")),h("radio.inactiveHoverBackground",lr,g.kg("radioHoverBackground","Background color of inactive active radio option when hovering.")),h("checkbox.background",kr,g.kg("checkbox.background","Background color of checkbox widget.")),h("checkbox.selectBackground",T,g.kg("checkbox.select.background","Background color of checkbox widget when the element it's in is selected.")),h("checkbox.foreground",sr,g.kg("checkbox.foreground","Foreground color of checkbox widget.")),h("checkbox.border",fr,g.kg("checkbox.border","Border color of checkbox widget.")),h("checkbox.selectBorder",w,g.kg("checkbox.select.border","Border color of checkbox widget when the element it's in is selected.")),h("keybindingLabel.background",{dark:new n.Q1(new n.bU(128,128,128,.17)),light:new n.Q1(new n.bU(221,221,221,.4)),hcDark:n.Q1.transparent,hcLight:n.Q1.transparent},g.kg("keybindingLabelBackground","Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.")),h("keybindingLabel.foreground",{dark:n.Q1.fromHex("#CCCCCC"),light:n.Q1.fromHex("#555555"),hcDark:n.Q1.white,hcLight:F},g.kg("keybindingLabelForeground","Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.")),h("keybindingLabel.border",{dark:new n.Q1(new n.bU(51,51,51,.6)),light:new n.Q1(new n.bU(204,204,204,.4)),hcDark:new n.Q1(new n.bU(111,195,223)),hcLight:L},g.kg("keybindingLabelBorder","Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.")),h("keybindingLabel.bottomBorder",{dark:new n.Q1(new n.bU(68,68,68,.6)),light:new n.Q1(new n.bU(187,187,187,.4)),hcDark:new n.Q1(new n.bU(111,195,223)),hcLight:F},g.kg("keybindingLabelBottomBorder","Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.")),h("list.focusBackground",null,g.kg("listFocusBackground","List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),h("list.focusForeground",null,g.kg("listFocusForeground","List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),h("list.focusOutline",{dark:D,light:D,hcDark:A,hcLight:A},g.kg("listFocusOutline","List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),h("list.focusAndSelectionOutline",null,g.kg("listFocusAndSelectionOutline","List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.")),h("list.activeSelectionBackground",{dark:"#04395E",light:"#0060C0",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},g.kg("listActiveSelectionBackground","List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not."))),Fr=h("list.activeSelectionForeground",{dark:n.Q1.white,light:n.Q1.white,hcDark:null,hcLight:null},g.kg("listActiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),wr=h("list.activeSelectionIconForeground",null,g.kg("listActiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Dr=(h("list.inactiveSelectionBackground",{dark:"#37373D",light:"#E4E6F1",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},g.kg("listInactiveSelectionBackground","List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),h("list.inactiveSelectionForeground",null,g.kg("listInactiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),h("list.inactiveSelectionIconForeground",null,g.kg("listInactiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),h("list.inactiveFocusBackground",null,g.kg("listInactiveFocusBackground","List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),h("list.inactiveFocusOutline",null,g.kg("listInactiveFocusOutline","List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),h("list.hoverBackground",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:n.Q1.white.transparent(.1),hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},g.kg("listHoverBackground","List/Tree background when hovering over items using the mouse.")),h("list.hoverForeground",null,g.kg("listHoverForeground","List/Tree foreground when hovering over items using the mouse.")),h("list.dropBackground",{dark:"#062F4A",light:"#D6EBFF",hcDark:null,hcLight:null},g.kg("listDropBackground","List/Tree drag and drop background when moving items over other items when using the mouse.")),h("list.dropBetweenBackground",{dark:w,light:w,hcDark:null,hcLight:null},g.kg("listDropBetweenBackground","List/Tree drag and drop border color when moving items between items when using the mouse.")),h("list.highlightForeground",{dark:"#2AAAFF",light:"#0066BF",hcDark:D,hcLight:D},g.kg("highlight","List/Tree foreground color of the match highlights when searching inside the list/tree.")));var Lr,Ar;h("list.focusHighlightForeground",{dark:Dr,light:(Lr=vr,Ar=Dr,{op:6,if:Lr,then:Ar,else:"#BBE7FF"}),hcDark:Dr,hcLight:Dr},g.kg("listFocusHighlightForeground","List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.")),h("list.invalidItemForeground",{dark:"#B89500",light:"#B89500",hcDark:"#B89500",hcLight:"#B5200D"},g.kg("invalidItemForeground","List/Tree foreground color for invalid items, for example an unresolved root in explorer.")),h("list.errorForeground",{dark:"#F88070",light:"#B01011",hcDark:null,hcLight:null},g.kg("listErrorForeground","Foreground color of list items containing errors.")),h("list.warningForeground",{dark:"#CCA700",light:"#855F00",hcDark:null,hcLight:null},g.kg("listWarningForeground","Foreground color of list items containing warnings.")),h("listFilterWidget.background",{light:u(T,0),dark:k(T,0),hcDark:T,hcLight:T},g.kg("listFilterWidgetBackground","Background color of the type filter widget in lists and trees.")),h("listFilterWidget.outline",{dark:n.Q1.transparent,light:n.Q1.transparent,hcDark:"#f38518",hcLight:"#007ACC"},g.kg("listFilterWidgetOutline","Outline color of the type filter widget in lists and trees.")),h("listFilterWidget.noMatchesOutline",{dark:"#BE1100",light:"#BE1100",hcDark:L,hcLight:L},g.kg("listFilterWidgetNoMatchesOutline","Outline color of the type filter widget in lists and trees, when there are no matches.")),h("listFilterWidget.shadow",$,g.kg("listFilterWidgetShadow","Shadow color of the type filter widget in lists and trees.")),h("list.filterMatchBackground",{dark:W,light:W,hcDark:null,hcLight:null},g.kg("listFilterMatchHighlight","Background color of the filtered match.")),h("list.filterMatchBorder",{dark:z,light:z,hcDark:L,hcLight:A},g.kg("listFilterMatchHighlightBorder","Border color of the filtered match.")),h("list.deemphasizedForeground",{dark:"#8C8C8C",light:"#8E8E90",hcDark:"#A7A8A9",hcLight:"#666666"},g.kg("listDeemphasizedForeground","List/Tree foreground color for items that are deemphasized."));const Cr=h("tree.indentGuidesStroke",{dark:"#585858",light:"#a9a9a9",hcDark:"#a9a9a9",hcLight:"#a5a5a5"},g.kg("treeIndentGuidesStroke","Tree stroke color for the indentation guides.")),yr=(h("tree.inactiveIndentGuidesStroke",s(Cr,.4),g.kg("treeInactiveIndentGuidesStroke","Tree stroke color for the indentation guides that are not active.")),h("tree.tableColumnsBorder",{dark:"#CCCCCC20",light:"#61616120",hcDark:null,hcLight:null},g.kg("tableColumnsBorder","Table border color between columns.")),h("tree.tableOddRowsBackground",{dark:s(F,.04),light:s(F,.04),hcDark:null,hcLight:null},g.kg("tableOddRowsBackgroundColor","Background color for odd table rows.")),h("editorActionList.background",T,g.kg("editorActionListBackground","Action List background color.")),h("editorActionList.foreground",S,g.kg("editorActionListForeground","Action List foreground color.")),h("editorActionList.focusForeground",Fr,g.kg("editorActionListFocusForeground","Action List foreground color for the focused item.")),h("editorActionList.focusBackground",vr,g.kg("editorActionListFocusBackground","Action List background color for the focused item.")),h("menu.border",{dark:null,light:null,hcDark:L,hcLight:L},g.kg("menuBorder","Border color of menus.")),h("menu.foreground",sr,g.kg("menuForeground","Foreground color of menu items.")),h("menu.background",kr,g.kg("menuBackground","Background color of menu items.")),h("menu.selectionForeground",Fr,g.kg("menuSelectionForeground","Foreground color of the selected menu item in menus.")),h("menu.selectionBackground",vr,g.kg("menuSelectionBackground","Background color of the selected menu item in menus.")),h("menu.selectionBorder",{dark:null,light:null,hcDark:A,hcLight:A},g.kg("menuSelectionBorder","Border color of the selected menu item in menus.")),h("menu.separatorBackground",{dark:"#606060",light:"#D4D4D4",hcDark:L,hcLight:L},g.kg("menuSeparatorBackground","Color of a separator menu item in menus.")),h("quickInput.background",T,g.kg("pickerBackground","Quick picker background color. The quick picker widget is the container for pickers like the command palette.")),h("quickInput.foreground",S,g.kg("pickerForeground","Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.")),h("quickInputTitle.background",{dark:new n.Q1(new n.bU(255,255,255,.105)),light:new n.Q1(new n.bU(0,0,0,.06)),hcDark:"#000000",hcLight:n.Q1.white},g.kg("pickerTitleBackground","Quick picker title background color. The quick picker widget is the container for pickers like the command palette.")),h("pickerGroup.foreground",{dark:"#3794FF",light:"#0066BF",hcDark:n.Q1.white,hcLight:"#0F4A85"},g.kg("pickerGroupForeground","Quick picker color for grouping labels.")),h("pickerGroup.border",{dark:"#3F3F46",light:"#CCCEDB",hcDark:n.Q1.white,hcLight:"#0F4A85"},g.kg("pickerGroupBorder","Quick picker color for grouping borders.")),h("quickInput.list.focusBackground",null,"",void 0,g.kg("quickInput.list.focusBackground deprecation","Please use quickInputList.focusBackground instead")));h("quickInputList.focusForeground",Fr,g.kg("quickInput.listFocusForeground","Quick picker foreground color for the focused item.")),h("quickInputList.focusIconForeground",wr,g.kg("quickInput.listFocusIconForeground","Quick picker icon foreground color for the focused item.")),h("quickInputList.focusBackground",{dark:f(yr,vr),light:f(yr,vr),hcDark:null,hcLight:null},g.kg("quickInput.listFocusBackground","Quick picker background color for the focused item.")),h("search.resultsInfoForeground",{light:F,dark:s(F,.65),hcDark:F,hcLight:F},g.kg("search.resultsInfoForeground","Color of the text in the search viewlet's completion message.")),h("searchEditor.findMatchBackground",{light:s(W,.66),dark:s(W,.66),hcDark:W,hcLight:W},g.kg("searchEditor.queryMatch","Color of the Search Editor query matches.")),h("searchEditor.findMatchBorder",{light:s(z,.66),dark:s(z,.66),hcDark:z,hcLight:z},g.kg("searchEditor.editorFindMatchBorder","Border color of the Search Editor query matches."))},34710:(r,e,o)=>{o.d(e,{Gy:()=>g,zy:()=>u,Yf:()=>l});var t,i,n=o(76535),d=o(21172),a=o(82834),c=o(37638);(i=t||(t={})).DARK="dark",i.LIGHT="light",i.HIGH_CONTRAST_DARK="hcDark",i.HIGH_CONTRAST_LIGHT="hcLight";const g=(0,a.u1)("themeService");function l(r){return{id:r}}const h=new class{constructor(){this.themingParticipants=[],this.themingParticipants=[],this.onThemingParticipantAddedEmitter=new n.vl}onColorThemeChange(r){return this.themingParticipants.push(r),this.onThemingParticipantAddedEmitter.fire(r),(0,d.s)((()=>{const e=this.themingParticipants.indexOf(r);this.themingParticipants.splice(e,1)}))}getThemingParticipants(){return this.themingParticipants}};function u(r){return h.onColorThemeChange(r)}c.O.add("base.contributions.theming",h),d.jG}}]);